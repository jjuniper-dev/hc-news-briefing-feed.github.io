name: Update latest.txt with news and weather

on:
  schedule:
    - cron: '30 10 * * *' # Runs daily at 6:30 AM Eastern
  workflow_dispatch:

jobs:
  update-latest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install feedparser requests

      - name: Generate latest.txt with news and weather
        run: |
          python3 <<EOF
          import feedparser
          import datetime
          import requests

          def get_weather():
              feed_url = "https://weather.gc.ca/rss/city/on-131_e.xml"
              feed = feedparser.parse(feed_url)
              items = feed.entries[:2]
              forecasts = [f"• {entry.title} — {entry.summary}" for entry in items]
              return "\n".join(forecasts)

          def fetch_news(feed_url, label, max_items=2):
              feed = feedparser.parse(feed_url)
              items = feed.entries[:max_items]
              result = []
              for item in items:
                  pub_date = datetime.datetime(*item.published_parsed[:6]).strftime("%B %d, %Y")
                  result.append(f"• {item.title.strip()} {{ {pub_date} ({item.source.title if 'source' in item else feed.feed.title}) }}")
              return f"\n{label}\n" + "\n".join(result)

          today = datetime.datetime.now().strftime("%B %d, %Y")
          content = [f"Morning News Briefing – {today}", ""]

          # Weather
          content.append("OTTAWA WEATHER")
          content.append(get_weather())

          # News sources
          feeds = [
              ("https://feeds.reuters.com/reuters/worldNews", "INTERNATIONAL NEWS"),
              ("https://rss.cbc.ca/lineup/canada.xml", "CANADIAN NEWS"),
              ("https://feeds.npr.org/1001/rss.xml", "US NEWS"),
              ("https://www.theregister.com/headlines.atom", "AI AND TECH NEWS"),
          ]

          for url, label in feeds:
              content.append(fetch_news(url, label))

          content.append("\n— End of briefing —")

          with open("latest.txt", "w") as f:
              f.write("\n".join(content))
          EOF

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Auto-update latest.txt
          file_pattern: latest.txt
